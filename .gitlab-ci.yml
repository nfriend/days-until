default:
  image: node:latest
  before_script:
    - cd lambda
    - yarn install --frozen-lockfile --cache-folder $CI_PROJECT_DIR/.yarn
  cache:
    paths:
      - $CI_PROJECT_DIR/.yarn
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - when: never

variables:
  SENTRY_RELEASE_VERSION: $CI_PIPELINE_IID

stages:
  - test
  - build
  - deploy
  - sync

lint code:
  stage: test
  script:
    - yarn lint

lint translations:
  stage: test
  script:
    - utility-scripts/check-for-new-translations.sh

lint model:
  image: nathanfriend/java-node-git:latest
  stage: test
  script:
    - utility-scripts/check-for-model-changes.sh

jest:
  stage: test
  script:
    - yarn test
  artifacts:
    paths:
      - lambda/test-report.xml
    reports:
      junit: lambda/test-report.xml

build:
  stage: build
  needs: []
  script:
    - yarn build
  artifacts:
    paths:
      - lambda/build/

deploy:
  stage: deploy
  script:
    - utility-scripts/deploy.sh
  environment:
    name: development
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - when: never

upload source maps:
  stage: deploy
  script:
    - yarn sentry-cli releases files $SENTRY_RELEASE_VERSION upload-sourcemaps build --url-prefix="/var/task/build/"
    - yarn sentry-cli releases files $SENTRY_RELEASE_VERSION upload src --url-prefix="/var/task/build/"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - when: never

upload assets:
  stage: deploy
  script:
    - utility-scripts/upload-assets-to-s3.js
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - when: never

sync:
  stage: sync
  script:
    - utility-scripts/merge-old-database-into-new-database.js
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - when: never
